//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStepInitParameters) DeepCopyInto(out *APIStepInitParameters) {
	*out = *in
	if in.AllowFailure != nil {
		in, out := &in.AllowFailure, &out.AllowFailure
		*out = new(bool)
		**out = **in
	}
	if in.Assertion != nil {
		in, out := &in.Assertion, &out.Assertion
		*out = make([]AssertionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractedValue != nil {
		in, out := &in.ExtractedValue, &out.ExtractedValue
		*out = make([]ExtractedValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsCritical != nil {
		in, out := &in.IsCritical, &out.IsCritical
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequestBasicauth != nil {
		in, out := &in.RequestBasicauth, &out.RequestBasicauth
		*out = make([]RequestBasicauthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestClientCertificate != nil {
		in, out := &in.RequestClientCertificate, &out.RequestClientCertificate
		*out = make([]RequestClientCertificateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestDefinition != nil {
		in, out := &in.RequestDefinition, &out.RequestDefinition
		*out = make([]RequestDefinitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestProxy != nil {
		in, out := &in.RequestProxy, &out.RequestProxy
		*out = make([]RequestProxyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestQuery != nil {
		in, out := &in.RequestQuery, &out.RequestQuery
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]RetryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subtype != nil {
		in, out := &in.Subtype, &out.Subtype
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStepInitParameters.
func (in *APIStepInitParameters) DeepCopy() *APIStepInitParameters {
	if in == nil {
		return nil
	}
	out := new(APIStepInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStepObservation) DeepCopyInto(out *APIStepObservation) {
	*out = *in
	if in.AllowFailure != nil {
		in, out := &in.AllowFailure, &out.AllowFailure
		*out = new(bool)
		**out = **in
	}
	if in.Assertion != nil {
		in, out := &in.Assertion, &out.Assertion
		*out = make([]AssertionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractedValue != nil {
		in, out := &in.ExtractedValue, &out.ExtractedValue
		*out = make([]ExtractedValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsCritical != nil {
		in, out := &in.IsCritical, &out.IsCritical
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequestBasicauth != nil {
		in, out := &in.RequestBasicauth, &out.RequestBasicauth
		*out = make([]RequestBasicauthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestClientCertificate != nil {
		in, out := &in.RequestClientCertificate, &out.RequestClientCertificate
		*out = make([]RequestClientCertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestDefinition != nil {
		in, out := &in.RequestDefinition, &out.RequestDefinition
		*out = make([]RequestDefinitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestProxy != nil {
		in, out := &in.RequestProxy, &out.RequestProxy
		*out = make([]RequestProxyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestQuery != nil {
		in, out := &in.RequestQuery, &out.RequestQuery
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]RetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subtype != nil {
		in, out := &in.Subtype, &out.Subtype
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStepObservation.
func (in *APIStepObservation) DeepCopy() *APIStepObservation {
	if in == nil {
		return nil
	}
	out := new(APIStepObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStepParameters) DeepCopyInto(out *APIStepParameters) {
	*out = *in
	if in.AllowFailure != nil {
		in, out := &in.AllowFailure, &out.AllowFailure
		*out = new(bool)
		**out = **in
	}
	if in.Assertion != nil {
		in, out := &in.Assertion, &out.Assertion
		*out = make([]AssertionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtractedValue != nil {
		in, out := &in.ExtractedValue, &out.ExtractedValue
		*out = make([]ExtractedValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsCritical != nil {
		in, out := &in.IsCritical, &out.IsCritical
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RequestBasicauth != nil {
		in, out := &in.RequestBasicauth, &out.RequestBasicauth
		*out = make([]RequestBasicauthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestClientCertificate != nil {
		in, out := &in.RequestClientCertificate, &out.RequestClientCertificate
		*out = make([]RequestClientCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestDefinition != nil {
		in, out := &in.RequestDefinition, &out.RequestDefinition
		*out = make([]RequestDefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestProxy != nil {
		in, out := &in.RequestProxy, &out.RequestProxy
		*out = make([]RequestProxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestQuery != nil {
		in, out := &in.RequestQuery, &out.RequestQuery
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]RetryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Subtype != nil {
		in, out := &in.Subtype, &out.Subtype
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStepParameters.
func (in *APIStepParameters) DeepCopy() *APIStepParameters {
	if in == nil {
		return nil
	}
	out := new(APIStepParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionInitParameters) DeepCopyInto(out *AssertionInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Targetjsonpath != nil {
		in, out := &in.Targetjsonpath, &out.Targetjsonpath
		*out = make([]TargetjsonpathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Targetxpath != nil {
		in, out := &in.Targetxpath, &out.Targetxpath
		*out = make([]TargetxpathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimingsScope != nil {
		in, out := &in.TimingsScope, &out.TimingsScope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionInitParameters.
func (in *AssertionInitParameters) DeepCopy() *AssertionInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssertionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionObservation) DeepCopyInto(out *AssertionObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Targetjsonpath != nil {
		in, out := &in.Targetjsonpath, &out.Targetjsonpath
		*out = make([]TargetjsonpathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Targetxpath != nil {
		in, out := &in.Targetxpath, &out.Targetxpath
		*out = make([]TargetxpathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimingsScope != nil {
		in, out := &in.TimingsScope, &out.TimingsScope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionObservation.
func (in *AssertionObservation) DeepCopy() *AssertionObservation {
	if in == nil {
		return nil
	}
	out := new(AssertionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionParameters) DeepCopyInto(out *AssertionParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Targetjsonpath != nil {
		in, out := &in.Targetjsonpath, &out.Targetjsonpath
		*out = make([]TargetjsonpathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Targetxpath != nil {
		in, out := &in.Targetxpath, &out.Targetxpath
		*out = make([]TargetxpathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimingsScope != nil {
		in, out := &in.TimingsScope, &out.TimingsScope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionParameters.
func (in *AssertionParameters) DeepCopy() *AssertionParameters {
	if in == nil {
		return nil
	}
	out := new(AssertionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionTargetjsonpathInitParameters) DeepCopyInto(out *AssertionTargetjsonpathInitParameters) {
	*out = *in
	if in.Jsonpath != nil {
		in, out := &in.Jsonpath, &out.Jsonpath
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionTargetjsonpathInitParameters.
func (in *AssertionTargetjsonpathInitParameters) DeepCopy() *AssertionTargetjsonpathInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssertionTargetjsonpathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionTargetjsonpathObservation) DeepCopyInto(out *AssertionTargetjsonpathObservation) {
	*out = *in
	if in.Jsonpath != nil {
		in, out := &in.Jsonpath, &out.Jsonpath
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionTargetjsonpathObservation.
func (in *AssertionTargetjsonpathObservation) DeepCopy() *AssertionTargetjsonpathObservation {
	if in == nil {
		return nil
	}
	out := new(AssertionTargetjsonpathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionTargetjsonpathParameters) DeepCopyInto(out *AssertionTargetjsonpathParameters) {
	*out = *in
	if in.Jsonpath != nil {
		in, out := &in.Jsonpath, &out.Jsonpath
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionTargetjsonpathParameters.
func (in *AssertionTargetjsonpathParameters) DeepCopy() *AssertionTargetjsonpathParameters {
	if in == nil {
		return nil
	}
	out := new(AssertionTargetjsonpathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionTargetxpathInitParameters) DeepCopyInto(out *AssertionTargetxpathInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
	if in.Xpath != nil {
		in, out := &in.Xpath, &out.Xpath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionTargetxpathInitParameters.
func (in *AssertionTargetxpathInitParameters) DeepCopy() *AssertionTargetxpathInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssertionTargetxpathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionTargetxpathObservation) DeepCopyInto(out *AssertionTargetxpathObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
	if in.Xpath != nil {
		in, out := &in.Xpath, &out.Xpath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionTargetxpathObservation.
func (in *AssertionTargetxpathObservation) DeepCopy() *AssertionTargetxpathObservation {
	if in == nil {
		return nil
	}
	out := new(AssertionTargetxpathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssertionTargetxpathParameters) DeepCopyInto(out *AssertionTargetxpathParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
	if in.Xpath != nil {
		in, out := &in.Xpath, &out.Xpath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssertionTargetxpathParameters.
func (in *AssertionTargetxpathParameters) DeepCopy() *AssertionTargetxpathParameters {
	if in == nil {
		return nil
	}
	out := new(AssertionTargetxpathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserStepInitParameters) DeepCopyInto(out *BrowserStepInitParameters) {
	*out = *in
	if in.AllowFailure != nil {
		in, out := &in.AllowFailure, &out.AllowFailure
		*out = new(bool)
		**out = **in
	}
	if in.ForceElementUpdate != nil {
		in, out := &in.ForceElementUpdate, &out.ForceElementUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsCritical != nil {
		in, out := &in.IsCritical, &out.IsCritical
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NoScreenshot != nil {
		in, out := &in.NoScreenshot, &out.NoScreenshot
		*out = new(bool)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserStepInitParameters.
func (in *BrowserStepInitParameters) DeepCopy() *BrowserStepInitParameters {
	if in == nil {
		return nil
	}
	out := new(BrowserStepInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserStepObservation) DeepCopyInto(out *BrowserStepObservation) {
	*out = *in
	if in.AllowFailure != nil {
		in, out := &in.AllowFailure, &out.AllowFailure
		*out = new(bool)
		**out = **in
	}
	if in.ForceElementUpdate != nil {
		in, out := &in.ForceElementUpdate, &out.ForceElementUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsCritical != nil {
		in, out := &in.IsCritical, &out.IsCritical
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NoScreenshot != nil {
		in, out := &in.NoScreenshot, &out.NoScreenshot
		*out = new(bool)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserStepObservation.
func (in *BrowserStepObservation) DeepCopy() *BrowserStepObservation {
	if in == nil {
		return nil
	}
	out := new(BrowserStepObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserStepParameters) DeepCopyInto(out *BrowserStepParameters) {
	*out = *in
	if in.AllowFailure != nil {
		in, out := &in.AllowFailure, &out.AllowFailure
		*out = new(bool)
		**out = **in
	}
	if in.ForceElementUpdate != nil {
		in, out := &in.ForceElementUpdate, &out.ForceElementUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsCritical != nil {
		in, out := &in.IsCritical, &out.IsCritical
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NoScreenshot != nil {
		in, out := &in.NoScreenshot, &out.NoScreenshot
		*out = new(bool)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserStepParameters.
func (in *BrowserStepParameters) DeepCopy() *BrowserStepParameters {
	if in == nil {
		return nil
	}
	out := new(BrowserStepParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserVariableInitParameters) DeepCopyInto(out *BrowserVariableInitParameters) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserVariableInitParameters.
func (in *BrowserVariableInitParameters) DeepCopy() *BrowserVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(BrowserVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserVariableObservation) DeepCopyInto(out *BrowserVariableObservation) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserVariableObservation.
func (in *BrowserVariableObservation) DeepCopy() *BrowserVariableObservation {
	if in == nil {
		return nil
	}
	out := new(BrowserVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrowserVariableParameters) DeepCopyInto(out *BrowserVariableParameters) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrowserVariableParameters.
func (in *BrowserVariableParameters) DeepCopy() *BrowserVariableParameters {
	if in == nil {
		return nil
	}
	out := new(BrowserVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertInitParameters) DeepCopyInto(out *CertInitParameters) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertInitParameters.
func (in *CertInitParameters) DeepCopy() *CertInitParameters {
	if in == nil {
		return nil
	}
	out := new(CertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertObservation) DeepCopyInto(out *CertObservation) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertObservation.
func (in *CertObservation) DeepCopy() *CertObservation {
	if in == nil {
		return nil
	}
	out := new(CertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertParameters) DeepCopyInto(out *CertParameters) {
	*out = *in
	out.ContentSecretRef = in.ContentSecretRef
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertParameters.
func (in *CertParameters) DeepCopy() *CertParameters {
	if in == nil {
		return nil
	}
	out := new(CertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CiInitParameters) DeepCopyInto(out *CiInitParameters) {
	*out = *in
	if in.ExecutionRule != nil {
		in, out := &in.ExecutionRule, &out.ExecutionRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CiInitParameters.
func (in *CiInitParameters) DeepCopy() *CiInitParameters {
	if in == nil {
		return nil
	}
	out := new(CiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CiObservation) DeepCopyInto(out *CiObservation) {
	*out = *in
	if in.ExecutionRule != nil {
		in, out := &in.ExecutionRule, &out.ExecutionRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CiObservation.
func (in *CiObservation) DeepCopy() *CiObservation {
	if in == nil {
		return nil
	}
	out := new(CiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CiParameters) DeepCopyInto(out *CiParameters) {
	*out = *in
	if in.ExecutionRule != nil {
		in, out := &in.ExecutionRule, &out.ExecutionRule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CiParameters.
func (in *CiParameters) DeepCopy() *CiParameters {
	if in == nil {
		return nil
	}
	out := new(CiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyCap) DeepCopyInto(out *ConcurrencyCap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyCap.
func (in *ConcurrencyCap) DeepCopy() *ConcurrencyCap {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyCap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConcurrencyCap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyCapInitParameters) DeepCopyInto(out *ConcurrencyCapInitParameters) {
	*out = *in
	if in.OnDemandConcurrencyCap != nil {
		in, out := &in.OnDemandConcurrencyCap, &out.OnDemandConcurrencyCap
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyCapInitParameters.
func (in *ConcurrencyCapInitParameters) DeepCopy() *ConcurrencyCapInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyCapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyCapList) DeepCopyInto(out *ConcurrencyCapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConcurrencyCap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyCapList.
func (in *ConcurrencyCapList) DeepCopy() *ConcurrencyCapList {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyCapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConcurrencyCapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyCapObservation) DeepCopyInto(out *ConcurrencyCapObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OnDemandConcurrencyCap != nil {
		in, out := &in.OnDemandConcurrencyCap, &out.OnDemandConcurrencyCap
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyCapObservation.
func (in *ConcurrencyCapObservation) DeepCopy() *ConcurrencyCapObservation {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyCapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyCapParameters) DeepCopyInto(out *ConcurrencyCapParameters) {
	*out = *in
	if in.OnDemandConcurrencyCap != nil {
		in, out := &in.OnDemandConcurrencyCap, &out.OnDemandConcurrencyCap
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyCapParameters.
func (in *ConcurrencyCapParameters) DeepCopy() *ConcurrencyCapParameters {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyCapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyCapSpec) DeepCopyInto(out *ConcurrencyCapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyCapSpec.
func (in *ConcurrencyCapSpec) DeepCopy() *ConcurrencyCapSpec {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyCapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConcurrencyCapStatus) DeepCopyInto(out *ConcurrencyCapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConcurrencyCapStatus.
func (in *ConcurrencyCapStatus) DeepCopy() *ConcurrencyCapStatus {
	if in == nil {
		return nil
	}
	out := new(ConcurrencyCapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigVariableInitParameters) DeepCopyInto(out *ConfigVariableInitParameters) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigVariableInitParameters.
func (in *ConfigVariableInitParameters) DeepCopy() *ConfigVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigVariableObservation) DeepCopyInto(out *ConfigVariableObservation) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigVariableObservation.
func (in *ConfigVariableObservation) DeepCopy() *ConfigVariableObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigVariableParameters) DeepCopyInto(out *ConfigVariableParameters) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigVariableParameters.
func (in *ConfigVariableParameters) DeepCopy() *ConfigVariableParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElementUserLocatorInitParameters) DeepCopyInto(out *ElementUserLocatorInitParameters) {
	*out = *in
	if in.FailTestOnCannotLocate != nil {
		in, out := &in.FailTestOnCannotLocate, &out.FailTestOnCannotLocate
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElementUserLocatorInitParameters.
func (in *ElementUserLocatorInitParameters) DeepCopy() *ElementUserLocatorInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElementUserLocatorInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElementUserLocatorObservation) DeepCopyInto(out *ElementUserLocatorObservation) {
	*out = *in
	if in.FailTestOnCannotLocate != nil {
		in, out := &in.FailTestOnCannotLocate, &out.FailTestOnCannotLocate
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElementUserLocatorObservation.
func (in *ElementUserLocatorObservation) DeepCopy() *ElementUserLocatorObservation {
	if in == nil {
		return nil
	}
	out := new(ElementUserLocatorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElementUserLocatorParameters) DeepCopyInto(out *ElementUserLocatorParameters) {
	*out = *in
	if in.FailTestOnCannotLocate != nil {
		in, out := &in.FailTestOnCannotLocate, &out.FailTestOnCannotLocate
		*out = new(bool)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]ValueParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElementUserLocatorParameters.
func (in *ElementUserLocatorParameters) DeepCopy() *ElementUserLocatorParameters {
	if in == nil {
		return nil
	}
	out := new(ElementUserLocatorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractedValueInitParameters) DeepCopyInto(out *ExtractedValueInitParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ExtractedValueParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractedValueInitParameters.
func (in *ExtractedValueInitParameters) DeepCopy() *ExtractedValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractedValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractedValueObservation) DeepCopyInto(out *ExtractedValueObservation) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ExtractedValueParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractedValueObservation.
func (in *ExtractedValueObservation) DeepCopy() *ExtractedValueObservation {
	if in == nil {
		return nil
	}
	out := new(ExtractedValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractedValueParameters) DeepCopyInto(out *ExtractedValueParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ExtractedValueParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractedValueParameters.
func (in *ExtractedValueParameters) DeepCopy() *ExtractedValueParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractedValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractedValueParserInitParameters) DeepCopyInto(out *ExtractedValueParserInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractedValueParserInitParameters.
func (in *ExtractedValueParserInitParameters) DeepCopy() *ExtractedValueParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractedValueParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractedValueParserObservation) DeepCopyInto(out *ExtractedValueParserObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractedValueParserObservation.
func (in *ExtractedValueParserObservation) DeepCopy() *ExtractedValueParserObservation {
	if in == nil {
		return nil
	}
	out := new(ExtractedValueParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtractedValueParserParameters) DeepCopyInto(out *ExtractedValueParserParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtractedValueParserParameters.
func (in *ExtractedValueParserParameters) DeepCopy() *ExtractedValueParserParameters {
	if in == nil {
		return nil
	}
	out := new(ExtractedValueParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVariable) DeepCopyInto(out *GlobalVariable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVariable.
func (in *GlobalVariable) DeepCopy() *GlobalVariable {
	if in == nil {
		return nil
	}
	out := new(GlobalVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalVariable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVariableInitParameters) DeepCopyInto(out *GlobalVariableInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParseTestID != nil {
		in, out := &in.ParseTestID, &out.ParseTestID
		*out = new(string)
		**out = **in
	}
	if in.ParseTestOptions != nil {
		in, out := &in.ParseTestOptions, &out.ParseTestOptions
		*out = make([]ParseTestOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVariableInitParameters.
func (in *GlobalVariableInitParameters) DeepCopy() *GlobalVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVariableList) DeepCopyInto(out *GlobalVariableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalVariable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVariableList.
func (in *GlobalVariableList) DeepCopy() *GlobalVariableList {
	if in == nil {
		return nil
	}
	out := new(GlobalVariableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalVariableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVariableObservation) DeepCopyInto(out *GlobalVariableObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParseTestID != nil {
		in, out := &in.ParseTestID, &out.ParseTestID
		*out = new(string)
		**out = **in
	}
	if in.ParseTestOptions != nil {
		in, out := &in.ParseTestOptions, &out.ParseTestOptions
		*out = make([]ParseTestOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVariableObservation.
func (in *GlobalVariableObservation) DeepCopy() *GlobalVariableObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVariableParameters) DeepCopyInto(out *GlobalVariableParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ParseTestID != nil {
		in, out := &in.ParseTestID, &out.ParseTestID
		*out = new(string)
		**out = **in
	}
	if in.ParseTestOptions != nil {
		in, out := &in.ParseTestOptions, &out.ParseTestOptions
		*out = make([]ParseTestOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Secure != nil {
		in, out := &in.Secure, &out.Secure
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	out.ValueSecretRef = in.ValueSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVariableParameters.
func (in *GlobalVariableParameters) DeepCopy() *GlobalVariableParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVariableSpec) DeepCopyInto(out *GlobalVariableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVariableSpec.
func (in *GlobalVariableSpec) DeepCopy() *GlobalVariableSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalVariableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalVariableStatus) DeepCopyInto(out *GlobalVariableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalVariableStatus.
func (in *GlobalVariableStatus) DeepCopy() *GlobalVariableStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalVariableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyInitParameters) DeepCopyInto(out *KeyInitParameters) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyInitParameters.
func (in *KeyInitParameters) DeepCopy() *KeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyObservation) DeepCopyInto(out *KeyObservation) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyObservation.
func (in *KeyObservation) DeepCopy() *KeyObservation {
	if in == nil {
		return nil
	}
	out := new(KeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyParameters) DeepCopyInto(out *KeyParameters) {
	*out = *in
	out.ContentSecretRef = in.ContentSecretRef
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyParameters.
func (in *KeyParameters) DeepCopy() *KeyParameters {
	if in == nil {
		return nil
	}
	out := new(KeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataInitParameters) DeepCopyInto(out *MetadataInitParameters) {
	*out = *in
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataInitParameters.
func (in *MetadataInitParameters) DeepCopy() *MetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorOptionsInitParameters) DeepCopyInto(out *MonitorOptionsInitParameters) {
	*out = *in
	if in.RenotifyInterval != nil {
		in, out := &in.RenotifyInterval, &out.RenotifyInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorOptionsInitParameters.
func (in *MonitorOptionsInitParameters) DeepCopy() *MonitorOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorOptionsObservation) DeepCopyInto(out *MonitorOptionsObservation) {
	*out = *in
	if in.RenotifyInterval != nil {
		in, out := &in.RenotifyInterval, &out.RenotifyInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorOptionsObservation.
func (in *MonitorOptionsObservation) DeepCopy() *MonitorOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(MonitorOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorOptionsParameters) DeepCopyInto(out *MonitorOptionsParameters) {
	*out = *in
	if in.RenotifyInterval != nil {
		in, out := &in.RenotifyInterval, &out.RenotifyInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorOptionsParameters.
func (in *MonitorOptionsParameters) DeepCopy() *MonitorOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(MonitorOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsInitParameters) DeepCopyInto(out *OptionsInitParameters) {
	*out = *in
	if in.TotpParameters != nil {
		in, out := &in.TotpParameters, &out.TotpParameters
		*out = make([]TotpParametersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsInitParameters.
func (in *OptionsInitParameters) DeepCopy() *OptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsListInitParameters) DeepCopyInto(out *OptionsListInitParameters) {
	*out = *in
	if in.AcceptSelfSigned != nil {
		in, out := &in.AcceptSelfSigned, &out.AcceptSelfSigned
		*out = new(bool)
		**out = **in
	}
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.CheckCertificateRevocation != nil {
		in, out := &in.CheckCertificateRevocation, &out.CheckCertificateRevocation
		*out = new(bool)
		**out = **in
	}
	if in.Ci != nil {
		in, out := &in.Ci, &out.Ci
		*out = make([]CiInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableCors != nil {
		in, out := &in.DisableCors, &out.DisableCors
		*out = new(bool)
		**out = **in
	}
	if in.DisableCsp != nil {
		in, out := &in.DisableCsp, &out.DisableCsp
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.HTTPVersion != nil {
		in, out := &in.HTTPVersion, &out.HTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServerCertificateError != nil {
		in, out := &in.IgnoreServerCertificateError, &out.IgnoreServerCertificateError
		*out = new(bool)
		**out = **in
	}
	if in.InitialNavigationTimeout != nil {
		in, out := &in.InitialNavigationTimeout, &out.InitialNavigationTimeout
		*out = new(float64)
		**out = **in
	}
	if in.MinFailureDuration != nil {
		in, out := &in.MinFailureDuration, &out.MinFailureDuration
		*out = new(float64)
		**out = **in
	}
	if in.MinLocationFailed != nil {
		in, out := &in.MinLocationFailed, &out.MinLocationFailed
		*out = new(float64)
		**out = **in
	}
	if in.MonitorName != nil {
		in, out := &in.MonitorName, &out.MonitorName
		*out = new(string)
		**out = **in
	}
	if in.MonitorOptions != nil {
		in, out := &in.MonitorOptions, &out.MonitorOptions
		*out = make([]MonitorOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorPriority != nil {
		in, out := &in.MonitorPriority, &out.MonitorPriority
		*out = new(float64)
		**out = **in
	}
	if in.NoScreenshot != nil {
		in, out := &in.NoScreenshot, &out.NoScreenshot
		*out = new(bool)
		**out = **in
	}
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]OptionsListRetryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RumSettings != nil {
		in, out := &in.RumSettings, &out.RumSettings
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TickEvery != nil {
		in, out := &in.TickEvery, &out.TickEvery
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsListInitParameters.
func (in *OptionsListInitParameters) DeepCopy() *OptionsListInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsListObservation) DeepCopyInto(out *OptionsListObservation) {
	*out = *in
	if in.AcceptSelfSigned != nil {
		in, out := &in.AcceptSelfSigned, &out.AcceptSelfSigned
		*out = new(bool)
		**out = **in
	}
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.CheckCertificateRevocation != nil {
		in, out := &in.CheckCertificateRevocation, &out.CheckCertificateRevocation
		*out = new(bool)
		**out = **in
	}
	if in.Ci != nil {
		in, out := &in.Ci, &out.Ci
		*out = make([]CiObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableCors != nil {
		in, out := &in.DisableCors, &out.DisableCors
		*out = new(bool)
		**out = **in
	}
	if in.DisableCsp != nil {
		in, out := &in.DisableCsp, &out.DisableCsp
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.HTTPVersion != nil {
		in, out := &in.HTTPVersion, &out.HTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServerCertificateError != nil {
		in, out := &in.IgnoreServerCertificateError, &out.IgnoreServerCertificateError
		*out = new(bool)
		**out = **in
	}
	if in.InitialNavigationTimeout != nil {
		in, out := &in.InitialNavigationTimeout, &out.InitialNavigationTimeout
		*out = new(float64)
		**out = **in
	}
	if in.MinFailureDuration != nil {
		in, out := &in.MinFailureDuration, &out.MinFailureDuration
		*out = new(float64)
		**out = **in
	}
	if in.MinLocationFailed != nil {
		in, out := &in.MinLocationFailed, &out.MinLocationFailed
		*out = new(float64)
		**out = **in
	}
	if in.MonitorName != nil {
		in, out := &in.MonitorName, &out.MonitorName
		*out = new(string)
		**out = **in
	}
	if in.MonitorOptions != nil {
		in, out := &in.MonitorOptions, &out.MonitorOptions
		*out = make([]MonitorOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorPriority != nil {
		in, out := &in.MonitorPriority, &out.MonitorPriority
		*out = new(float64)
		**out = **in
	}
	if in.NoScreenshot != nil {
		in, out := &in.NoScreenshot, &out.NoScreenshot
		*out = new(bool)
		**out = **in
	}
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]OptionsListRetryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RumSettings != nil {
		in, out := &in.RumSettings, &out.RumSettings
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TickEvery != nil {
		in, out := &in.TickEvery, &out.TickEvery
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsListObservation.
func (in *OptionsListObservation) DeepCopy() *OptionsListObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsListParameters) DeepCopyInto(out *OptionsListParameters) {
	*out = *in
	if in.AcceptSelfSigned != nil {
		in, out := &in.AcceptSelfSigned, &out.AcceptSelfSigned
		*out = new(bool)
		**out = **in
	}
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.CheckCertificateRevocation != nil {
		in, out := &in.CheckCertificateRevocation, &out.CheckCertificateRevocation
		*out = new(bool)
		**out = **in
	}
	if in.Ci != nil {
		in, out := &in.Ci, &out.Ci
		*out = make([]CiParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableCors != nil {
		in, out := &in.DisableCors, &out.DisableCors
		*out = new(bool)
		**out = **in
	}
	if in.DisableCsp != nil {
		in, out := &in.DisableCsp, &out.DisableCsp
		*out = new(bool)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.HTTPVersion != nil {
		in, out := &in.HTTPVersion, &out.HTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.IgnoreServerCertificateError != nil {
		in, out := &in.IgnoreServerCertificateError, &out.IgnoreServerCertificateError
		*out = new(bool)
		**out = **in
	}
	if in.InitialNavigationTimeout != nil {
		in, out := &in.InitialNavigationTimeout, &out.InitialNavigationTimeout
		*out = new(float64)
		**out = **in
	}
	if in.MinFailureDuration != nil {
		in, out := &in.MinFailureDuration, &out.MinFailureDuration
		*out = new(float64)
		**out = **in
	}
	if in.MinLocationFailed != nil {
		in, out := &in.MinLocationFailed, &out.MinLocationFailed
		*out = new(float64)
		**out = **in
	}
	if in.MonitorName != nil {
		in, out := &in.MonitorName, &out.MonitorName
		*out = new(string)
		**out = **in
	}
	if in.MonitorOptions != nil {
		in, out := &in.MonitorOptions, &out.MonitorOptions
		*out = make([]MonitorOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MonitorPriority != nil {
		in, out := &in.MonitorPriority, &out.MonitorPriority
		*out = new(float64)
		**out = **in
	}
	if in.NoScreenshot != nil {
		in, out := &in.NoScreenshot, &out.NoScreenshot
		*out = new(bool)
		**out = **in
	}
	if in.RestrictedRoles != nil {
		in, out := &in.RestrictedRoles, &out.RestrictedRoles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Retry != nil {
		in, out := &in.Retry, &out.Retry
		*out = make([]OptionsListRetryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RumSettings != nil {
		in, out := &in.RumSettings, &out.RumSettings
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TickEvery != nil {
		in, out := &in.TickEvery, &out.TickEvery
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsListParameters.
func (in *OptionsListParameters) DeepCopy() *OptionsListParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsListRetryInitParameters) DeepCopyInto(out *OptionsListRetryInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsListRetryInitParameters.
func (in *OptionsListRetryInitParameters) DeepCopy() *OptionsListRetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsListRetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsListRetryObservation) DeepCopyInto(out *OptionsListRetryObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsListRetryObservation.
func (in *OptionsListRetryObservation) DeepCopy() *OptionsListRetryObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsListRetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsListRetryParameters) DeepCopyInto(out *OptionsListRetryParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsListRetryParameters.
func (in *OptionsListRetryParameters) DeepCopy() *OptionsListRetryParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsListRetryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsObservation) DeepCopyInto(out *OptionsObservation) {
	*out = *in
	if in.TotpParameters != nil {
		in, out := &in.TotpParameters, &out.TotpParameters
		*out = make([]TotpParametersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsObservation.
func (in *OptionsObservation) DeepCopy() *OptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsParameters) DeepCopyInto(out *OptionsParameters) {
	*out = *in
	if in.TotpParameters != nil {
		in, out := &in.TotpParameters, &out.TotpParameters
		*out = make([]TotpParametersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsParameters.
func (in *OptionsParameters) DeepCopy() *OptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsInitParameters) DeepCopyInto(out *ParamsInitParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.Check != nil {
		in, out := &in.Check, &out.Check
		*out = new(string)
		**out = **in
	}
	if in.ClickType != nil {
		in, out := &in.ClickType, &out.ClickType
		*out = new(string)
		**out = **in
	}
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(float64)
		**out = **in
	}
	if in.Element != nil {
		in, out := &in.Element, &out.Element
		*out = new(string)
		**out = **in
	}
	if in.ElementUserLocator != nil {
		in, out := &in.ElementUserLocator, &out.ElementUserLocator
		*out = make([]ElementUserLocatorInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(string)
		**out = **in
	}
	if in.Modifiers != nil {
		in, out := &in.Modifiers, &out.Modifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PlayingTabID != nil {
		in, out := &in.PlayingTabID, &out.PlayingTabID
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.SubtestPublicID != nil {
		in, out := &in.SubtestPublicID, &out.SubtestPublicID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WithClick != nil {
		in, out := &in.WithClick, &out.WithClick
		*out = new(bool)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(float64)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsInitParameters.
func (in *ParamsInitParameters) DeepCopy() *ParamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsObservation) DeepCopyInto(out *ParamsObservation) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.Check != nil {
		in, out := &in.Check, &out.Check
		*out = new(string)
		**out = **in
	}
	if in.ClickType != nil {
		in, out := &in.ClickType, &out.ClickType
		*out = new(string)
		**out = **in
	}
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(float64)
		**out = **in
	}
	if in.Element != nil {
		in, out := &in.Element, &out.Element
		*out = new(string)
		**out = **in
	}
	if in.ElementUserLocator != nil {
		in, out := &in.ElementUserLocator, &out.ElementUserLocator
		*out = make([]ElementUserLocatorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(string)
		**out = **in
	}
	if in.Modifiers != nil {
		in, out := &in.Modifiers, &out.Modifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PlayingTabID != nil {
		in, out := &in.PlayingTabID, &out.PlayingTabID
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.SubtestPublicID != nil {
		in, out := &in.SubtestPublicID, &out.SubtestPublicID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WithClick != nil {
		in, out := &in.WithClick, &out.WithClick
		*out = new(bool)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(float64)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsObservation.
func (in *ParamsObservation) DeepCopy() *ParamsObservation {
	if in == nil {
		return nil
	}
	out := new(ParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsParameters) DeepCopyInto(out *ParamsParameters) {
	*out = *in
	if in.Attribute != nil {
		in, out := &in.Attribute, &out.Attribute
		*out = new(string)
		**out = **in
	}
	if in.Check != nil {
		in, out := &in.Check, &out.Check
		*out = new(string)
		**out = **in
	}
	if in.ClickType != nil {
		in, out := &in.ClickType, &out.ClickType
		*out = new(string)
		**out = **in
	}
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(string)
		**out = **in
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(float64)
		**out = **in
	}
	if in.Element != nil {
		in, out := &in.Element, &out.Element
		*out = new(string)
		**out = **in
	}
	if in.ElementUserLocator != nil {
		in, out := &in.ElementUserLocator, &out.ElementUserLocator
		*out = make([]ElementUserLocatorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.File != nil {
		in, out := &in.File, &out.File
		*out = new(string)
		**out = **in
	}
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = new(string)
		**out = **in
	}
	if in.Modifiers != nil {
		in, out := &in.Modifiers, &out.Modifiers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PlayingTabID != nil {
		in, out := &in.PlayingTabID, &out.PlayingTabID
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.SubtestPublicID != nil {
		in, out := &in.SubtestPublicID, &out.SubtestPublicID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WithClick != nil {
		in, out := &in.WithClick, &out.WithClick
		*out = new(bool)
		**out = **in
	}
	if in.X != nil {
		in, out := &in.X, &out.X
		*out = new(float64)
		**out = **in
	}
	if in.Y != nil {
		in, out := &in.Y, &out.Y
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsParameters.
func (in *ParamsParameters) DeepCopy() *ParamsParameters {
	if in == nil {
		return nil
	}
	out := new(ParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParseTestOptionsInitParameters) DeepCopyInto(out *ParseTestOptionsInitParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.LocalVariableName != nil {
		in, out := &in.LocalVariableName, &out.LocalVariableName
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParseTestOptionsInitParameters.
func (in *ParseTestOptionsInitParameters) DeepCopy() *ParseTestOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParseTestOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParseTestOptionsObservation) DeepCopyInto(out *ParseTestOptionsObservation) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.LocalVariableName != nil {
		in, out := &in.LocalVariableName, &out.LocalVariableName
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParseTestOptionsObservation.
func (in *ParseTestOptionsObservation) DeepCopy() *ParseTestOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ParseTestOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParseTestOptionsParameters) DeepCopyInto(out *ParseTestOptionsParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.LocalVariableName != nil {
		in, out := &in.LocalVariableName, &out.LocalVariableName
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParseTestOptionsParameters.
func (in *ParseTestOptionsParameters) DeepCopy() *ParseTestOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ParseTestOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserInitParameters) DeepCopyInto(out *ParserInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserInitParameters.
func (in *ParserInitParameters) DeepCopy() *ParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserObservation) DeepCopyInto(out *ParserObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserObservation.
func (in *ParserObservation) DeepCopy() *ParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserParameters) DeepCopyInto(out *ParserParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserParameters.
func (in *ParserParameters) DeepCopy() *ParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLocation) DeepCopyInto(out *PrivateLocation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLocation.
func (in *PrivateLocation) DeepCopy() *PrivateLocation {
	if in == nil {
		return nil
	}
	out := new(PrivateLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateLocation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLocationInitParameters) DeepCopyInto(out *PrivateLocationInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLocationInitParameters.
func (in *PrivateLocationInitParameters) DeepCopy() *PrivateLocationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateLocationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLocationList) DeepCopyInto(out *PrivateLocationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateLocation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLocationList.
func (in *PrivateLocationList) DeepCopy() *PrivateLocationList {
	if in == nil {
		return nil
	}
	out := new(PrivateLocationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateLocationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLocationObservation) DeepCopyInto(out *PrivateLocationObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLocationObservation.
func (in *PrivateLocationObservation) DeepCopy() *PrivateLocationObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLocationParameters) DeepCopyInto(out *PrivateLocationParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLocationParameters.
func (in *PrivateLocationParameters) DeepCopy() *PrivateLocationParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLocationSpec) DeepCopyInto(out *PrivateLocationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLocationSpec.
func (in *PrivateLocationSpec) DeepCopy() *PrivateLocationSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateLocationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateLocationStatus) DeepCopyInto(out *PrivateLocationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateLocationStatus.
func (in *PrivateLocationStatus) DeepCopy() *PrivateLocationStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateLocationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBasicauthInitParameters) DeepCopyInto(out *RequestBasicauthInitParameters) {
	*out = *in
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SessionToken != nil {
		in, out := &in.SessionToken, &out.SessionToken
		*out = new(string)
		**out = **in
	}
	if in.TokenAPIAuthentication != nil {
		in, out := &in.TokenAPIAuthentication, &out.TokenAPIAuthentication
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Workstation != nil {
		in, out := &in.Workstation, &out.Workstation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBasicauthInitParameters.
func (in *RequestBasicauthInitParameters) DeepCopy() *RequestBasicauthInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestBasicauthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBasicauthObservation) DeepCopyInto(out *RequestBasicauthObservation) {
	*out = *in
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SessionToken != nil {
		in, out := &in.SessionToken, &out.SessionToken
		*out = new(string)
		**out = **in
	}
	if in.TokenAPIAuthentication != nil {
		in, out := &in.TokenAPIAuthentication, &out.TokenAPIAuthentication
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Workstation != nil {
		in, out := &in.Workstation, &out.Workstation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBasicauthObservation.
func (in *RequestBasicauthObservation) DeepCopy() *RequestBasicauthObservation {
	if in == nil {
		return nil
	}
	out := new(RequestBasicauthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestBasicauthParameters) DeepCopyInto(out *RequestBasicauthParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SessionToken != nil {
		in, out := &in.SessionToken, &out.SessionToken
		*out = new(string)
		**out = **in
	}
	if in.TokenAPIAuthentication != nil {
		in, out := &in.TokenAPIAuthentication, &out.TokenAPIAuthentication
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Workstation != nil {
		in, out := &in.Workstation, &out.Workstation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestBasicauthParameters.
func (in *RequestBasicauthParameters) DeepCopy() *RequestBasicauthParameters {
	if in == nil {
		return nil
	}
	out := new(RequestBasicauthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateCertInitParameters) DeepCopyInto(out *RequestClientCertificateCertInitParameters) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateCertInitParameters.
func (in *RequestClientCertificateCertInitParameters) DeepCopy() *RequestClientCertificateCertInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateCertInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateCertObservation) DeepCopyInto(out *RequestClientCertificateCertObservation) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateCertObservation.
func (in *RequestClientCertificateCertObservation) DeepCopy() *RequestClientCertificateCertObservation {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateCertObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateCertParameters) DeepCopyInto(out *RequestClientCertificateCertParameters) {
	*out = *in
	out.ContentSecretRef = in.ContentSecretRef
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateCertParameters.
func (in *RequestClientCertificateCertParameters) DeepCopy() *RequestClientCertificateCertParameters {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateCertParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateInitParameters) DeepCopyInto(out *RequestClientCertificateInitParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = make([]CertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateInitParameters.
func (in *RequestClientCertificateInitParameters) DeepCopy() *RequestClientCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateKeyInitParameters) DeepCopyInto(out *RequestClientCertificateKeyInitParameters) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateKeyInitParameters.
func (in *RequestClientCertificateKeyInitParameters) DeepCopy() *RequestClientCertificateKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateKeyObservation) DeepCopyInto(out *RequestClientCertificateKeyObservation) {
	*out = *in
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateKeyObservation.
func (in *RequestClientCertificateKeyObservation) DeepCopy() *RequestClientCertificateKeyObservation {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateKeyParameters) DeepCopyInto(out *RequestClientCertificateKeyParameters) {
	*out = *in
	out.ContentSecretRef = in.ContentSecretRef
	if in.Filename != nil {
		in, out := &in.Filename, &out.Filename
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateKeyParameters.
func (in *RequestClientCertificateKeyParameters) DeepCopy() *RequestClientCertificateKeyParameters {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateObservation) DeepCopyInto(out *RequestClientCertificateObservation) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = make([]CertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateObservation.
func (in *RequestClientCertificateObservation) DeepCopy() *RequestClientCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestClientCertificateParameters) DeepCopyInto(out *RequestClientCertificateParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = make([]CertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]KeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestClientCertificateParameters.
func (in *RequestClientCertificateParameters) DeepCopy() *RequestClientCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(RequestClientCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestDefinitionInitParameters) DeepCopyInto(out *RequestDefinitionInitParameters) {
	*out = *in
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.BodyType != nil {
		in, out := &in.BodyType, &out.BodyType
		*out = new(string)
		**out = **in
	}
	if in.CallType != nil {
		in, out := &in.CallType, &out.CallType
		*out = new(string)
		**out = **in
	}
	if in.CertificateDomains != nil {
		in, out := &in.CertificateDomains, &out.CertificateDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServer != nil {
		in, out := &in.DNSServer, &out.DNSServer
		*out = new(string)
		**out = **in
	}
	if in.DNSServerPort != nil {
		in, out := &in.DNSServerPort, &out.DNSServerPort
		*out = new(float64)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.NoSavingResponseBody != nil {
		in, out := &in.NoSavingResponseBody, &out.NoSavingResponseBody
		*out = new(bool)
		**out = **in
	}
	if in.NumberOfPackets != nil {
		in, out := &in.NumberOfPackets, &out.NumberOfPackets
		*out = new(float64)
		**out = **in
	}
	if in.PersistCookies != nil {
		in, out := &in.PersistCookies, &out.PersistCookies
		*out = new(bool)
		**out = **in
	}
	if in.PlainProtoFile != nil {
		in, out := &in.PlainProtoFile, &out.PlainProtoFile
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ProtoJSONDescriptor != nil {
		in, out := &in.ProtoJSONDescriptor, &out.ProtoJSONDescriptor
		*out = new(string)
		**out = **in
	}
	if in.Servername != nil {
		in, out := &in.Servername, &out.Servername
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrackHops != nil {
		in, out := &in.ShouldTrackHops, &out.ShouldTrackHops
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestDefinitionInitParameters.
func (in *RequestDefinitionInitParameters) DeepCopy() *RequestDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestDefinitionObservation) DeepCopyInto(out *RequestDefinitionObservation) {
	*out = *in
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.BodyType != nil {
		in, out := &in.BodyType, &out.BodyType
		*out = new(string)
		**out = **in
	}
	if in.CallType != nil {
		in, out := &in.CallType, &out.CallType
		*out = new(string)
		**out = **in
	}
	if in.CertificateDomains != nil {
		in, out := &in.CertificateDomains, &out.CertificateDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServer != nil {
		in, out := &in.DNSServer, &out.DNSServer
		*out = new(string)
		**out = **in
	}
	if in.DNSServerPort != nil {
		in, out := &in.DNSServerPort, &out.DNSServerPort
		*out = new(float64)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.NoSavingResponseBody != nil {
		in, out := &in.NoSavingResponseBody, &out.NoSavingResponseBody
		*out = new(bool)
		**out = **in
	}
	if in.NumberOfPackets != nil {
		in, out := &in.NumberOfPackets, &out.NumberOfPackets
		*out = new(float64)
		**out = **in
	}
	if in.PersistCookies != nil {
		in, out := &in.PersistCookies, &out.PersistCookies
		*out = new(bool)
		**out = **in
	}
	if in.PlainProtoFile != nil {
		in, out := &in.PlainProtoFile, &out.PlainProtoFile
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ProtoJSONDescriptor != nil {
		in, out := &in.ProtoJSONDescriptor, &out.ProtoJSONDescriptor
		*out = new(string)
		**out = **in
	}
	if in.Servername != nil {
		in, out := &in.Servername, &out.Servername
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrackHops != nil {
		in, out := &in.ShouldTrackHops, &out.ShouldTrackHops
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestDefinitionObservation.
func (in *RequestDefinitionObservation) DeepCopy() *RequestDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(RequestDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestDefinitionParameters) DeepCopyInto(out *RequestDefinitionParameters) {
	*out = *in
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.BodyType != nil {
		in, out := &in.BodyType, &out.BodyType
		*out = new(string)
		**out = **in
	}
	if in.CallType != nil {
		in, out := &in.CallType, &out.CallType
		*out = new(string)
		**out = **in
	}
	if in.CertificateDomains != nil {
		in, out := &in.CertificateDomains, &out.CertificateDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServer != nil {
		in, out := &in.DNSServer, &out.DNSServer
		*out = new(string)
		**out = **in
	}
	if in.DNSServerPort != nil {
		in, out := &in.DNSServerPort, &out.DNSServerPort
		*out = new(float64)
		**out = **in
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.NoSavingResponseBody != nil {
		in, out := &in.NoSavingResponseBody, &out.NoSavingResponseBody
		*out = new(bool)
		**out = **in
	}
	if in.NumberOfPackets != nil {
		in, out := &in.NumberOfPackets, &out.NumberOfPackets
		*out = new(float64)
		**out = **in
	}
	if in.PersistCookies != nil {
		in, out := &in.PersistCookies, &out.PersistCookies
		*out = new(bool)
		**out = **in
	}
	if in.PlainProtoFile != nil {
		in, out := &in.PlainProtoFile, &out.PlainProtoFile
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ProtoJSONDescriptor != nil {
		in, out := &in.ProtoJSONDescriptor, &out.ProtoJSONDescriptor
		*out = new(string)
		**out = **in
	}
	if in.Servername != nil {
		in, out := &in.Servername, &out.Servername
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrackHops != nil {
		in, out := &in.ShouldTrackHops, &out.ShouldTrackHops
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestDefinitionParameters.
func (in *RequestDefinitionParameters) DeepCopy() *RequestDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(RequestDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestProxyInitParameters) DeepCopyInto(out *RequestProxyInitParameters) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestProxyInitParameters.
func (in *RequestProxyInitParameters) DeepCopy() *RequestProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestProxyObservation) DeepCopyInto(out *RequestProxyObservation) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestProxyObservation.
func (in *RequestProxyObservation) DeepCopy() *RequestProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RequestProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestProxyParameters) DeepCopyInto(out *RequestProxyParameters) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestProxyParameters.
func (in *RequestProxyParameters) DeepCopy() *RequestProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RequestProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryInitParameters) DeepCopyInto(out *RetryInitParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryInitParameters.
func (in *RetryInitParameters) DeepCopy() *RetryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryObservation) DeepCopyInto(out *RetryObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryObservation.
func (in *RetryObservation) DeepCopy() *RetryObservation {
	if in == nil {
		return nil
	}
	out := new(RetryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryParameters) DeepCopyInto(out *RetryParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryParameters.
func (in *RetryParameters) DeepCopy() *RetryParameters {
	if in == nil {
		return nil
	}
	out := new(RetryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingInitParameters) DeepCopyInto(out *SchedulingInitParameters) {
	*out = *in
	if in.Timeframes != nil {
		in, out := &in.Timeframes, &out.Timeframes
		*out = make([]TimeframesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingInitParameters.
func (in *SchedulingInitParameters) DeepCopy() *SchedulingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingObservation) DeepCopyInto(out *SchedulingObservation) {
	*out = *in
	if in.Timeframes != nil {
		in, out := &in.Timeframes, &out.Timeframes
		*out = make([]TimeframesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingObservation.
func (in *SchedulingObservation) DeepCopy() *SchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingParameters) DeepCopyInto(out *SchedulingParameters) {
	*out = *in
	if in.Timeframes != nil {
		in, out := &in.Timeframes, &out.Timeframes
		*out = make([]TimeframesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingParameters.
func (in *SchedulingParameters) DeepCopy() *SchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetjsonpathInitParameters) DeepCopyInto(out *TargetjsonpathInitParameters) {
	*out = *in
	if in.Jsonpath != nil {
		in, out := &in.Jsonpath, &out.Jsonpath
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetjsonpathInitParameters.
func (in *TargetjsonpathInitParameters) DeepCopy() *TargetjsonpathInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetjsonpathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetjsonpathObservation) DeepCopyInto(out *TargetjsonpathObservation) {
	*out = *in
	if in.Jsonpath != nil {
		in, out := &in.Jsonpath, &out.Jsonpath
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetjsonpathObservation.
func (in *TargetjsonpathObservation) DeepCopy() *TargetjsonpathObservation {
	if in == nil {
		return nil
	}
	out := new(TargetjsonpathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetjsonpathParameters) DeepCopyInto(out *TargetjsonpathParameters) {
	*out = *in
	if in.Jsonpath != nil {
		in, out := &in.Jsonpath, &out.Jsonpath
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetjsonpathParameters.
func (in *TargetjsonpathParameters) DeepCopy() *TargetjsonpathParameters {
	if in == nil {
		return nil
	}
	out := new(TargetjsonpathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetxpathInitParameters) DeepCopyInto(out *TargetxpathInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
	if in.Xpath != nil {
		in, out := &in.Xpath, &out.Xpath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetxpathInitParameters.
func (in *TargetxpathInitParameters) DeepCopy() *TargetxpathInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetxpathInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetxpathObservation) DeepCopyInto(out *TargetxpathObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
	if in.Xpath != nil {
		in, out := &in.Xpath, &out.Xpath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetxpathObservation.
func (in *TargetxpathObservation) DeepCopy() *TargetxpathObservation {
	if in == nil {
		return nil
	}
	out := new(TargetxpathObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetxpathParameters) DeepCopyInto(out *TargetxpathParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Targetvalue != nil {
		in, out := &in.Targetvalue, &out.Targetvalue
		*out = new(string)
		**out = **in
	}
	if in.Xpath != nil {
		in, out := &in.Xpath, &out.Xpath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetxpathParameters.
func (in *TargetxpathParameters) DeepCopy() *TargetxpathParameters {
	if in == nil {
		return nil
	}
	out := new(TargetxpathParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Test) DeepCopyInto(out *Test) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Test.
func (in *Test) DeepCopy() *Test {
	if in == nil {
		return nil
	}
	out := new(Test)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Test) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestAssertionInitParameters) DeepCopyInto(out *TestAssertionInitParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Targetjsonpath != nil {
		in, out := &in.Targetjsonpath, &out.Targetjsonpath
		*out = make([]AssertionTargetjsonpathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Targetxpath != nil {
		in, out := &in.Targetxpath, &out.Targetxpath
		*out = make([]AssertionTargetxpathInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimingsScope != nil {
		in, out := &in.TimingsScope, &out.TimingsScope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestAssertionInitParameters.
func (in *TestAssertionInitParameters) DeepCopy() *TestAssertionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestAssertionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestAssertionObservation) DeepCopyInto(out *TestAssertionObservation) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Targetjsonpath != nil {
		in, out := &in.Targetjsonpath, &out.Targetjsonpath
		*out = make([]AssertionTargetjsonpathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Targetxpath != nil {
		in, out := &in.Targetxpath, &out.Targetxpath
		*out = make([]AssertionTargetxpathObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimingsScope != nil {
		in, out := &in.TimingsScope, &out.TimingsScope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestAssertionObservation.
func (in *TestAssertionObservation) DeepCopy() *TestAssertionObservation {
	if in == nil {
		return nil
	}
	out := new(TestAssertionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestAssertionParameters) DeepCopyInto(out *TestAssertionParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Property != nil {
		in, out := &in.Property, &out.Property
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Targetjsonpath != nil {
		in, out := &in.Targetjsonpath, &out.Targetjsonpath
		*out = make([]AssertionTargetjsonpathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Targetxpath != nil {
		in, out := &in.Targetxpath, &out.Targetxpath
		*out = make([]AssertionTargetxpathParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimingsScope != nil {
		in, out := &in.TimingsScope, &out.TimingsScope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestAssertionParameters.
func (in *TestAssertionParameters) DeepCopy() *TestAssertionParameters {
	if in == nil {
		return nil
	}
	out := new(TestAssertionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestInitParameters) DeepCopyInto(out *TestInitParameters) {
	*out = *in
	if in.APIStep != nil {
		in, out := &in.APIStep, &out.APIStep
		*out = make([]APIStepInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Assertion != nil {
		in, out := &in.Assertion, &out.Assertion
		*out = make([]TestAssertionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BrowserStep != nil {
		in, out := &in.BrowserStep, &out.BrowserStep
		*out = make([]BrowserStepInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BrowserVariable != nil {
		in, out := &in.BrowserVariable, &out.BrowserVariable
		*out = make([]BrowserVariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigVariable != nil {
		in, out := &in.ConfigVariable, &out.ConfigVariable
		*out = make([]ConfigVariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceIds != nil {
		in, out := &in.DeviceIds, &out.DeviceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OptionsList != nil {
		in, out := &in.OptionsList, &out.OptionsList
		*out = make([]OptionsListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBasicauth != nil {
		in, out := &in.RequestBasicauth, &out.RequestBasicauth
		*out = make([]TestRequestBasicauthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestClientCertificate != nil {
		in, out := &in.RequestClientCertificate, &out.RequestClientCertificate
		*out = make([]TestRequestClientCertificateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestDefinition != nil {
		in, out := &in.RequestDefinition, &out.RequestDefinition
		*out = make([]TestRequestDefinitionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestMetadata != nil {
		in, out := &in.RequestMetadata, &out.RequestMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestProxy != nil {
		in, out := &in.RequestProxy, &out.RequestProxy
		*out = make([]TestRequestProxyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestQuery != nil {
		in, out := &in.RequestQuery, &out.RequestQuery
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SetCookie != nil {
		in, out := &in.SetCookie, &out.SetCookie
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Subtype != nil {
		in, out := &in.Subtype, &out.Subtype
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestInitParameters.
func (in *TestInitParameters) DeepCopy() *TestInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestList) DeepCopyInto(out *TestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Test, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestList.
func (in *TestList) DeepCopy() *TestList {
	if in == nil {
		return nil
	}
	out := new(TestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestObservation) DeepCopyInto(out *TestObservation) {
	*out = *in
	if in.APIStep != nil {
		in, out := &in.APIStep, &out.APIStep
		*out = make([]APIStepObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Assertion != nil {
		in, out := &in.Assertion, &out.Assertion
		*out = make([]TestAssertionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BrowserStep != nil {
		in, out := &in.BrowserStep, &out.BrowserStep
		*out = make([]BrowserStepObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BrowserVariable != nil {
		in, out := &in.BrowserVariable, &out.BrowserVariable
		*out = make([]BrowserVariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigVariable != nil {
		in, out := &in.ConfigVariable, &out.ConfigVariable
		*out = make([]ConfigVariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceIds != nil {
		in, out := &in.DeviceIds, &out.DeviceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.MonitorID != nil {
		in, out := &in.MonitorID, &out.MonitorID
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OptionsList != nil {
		in, out := &in.OptionsList, &out.OptionsList
		*out = make([]OptionsListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBasicauth != nil {
		in, out := &in.RequestBasicauth, &out.RequestBasicauth
		*out = make([]TestRequestBasicauthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestClientCertificate != nil {
		in, out := &in.RequestClientCertificate, &out.RequestClientCertificate
		*out = make([]TestRequestClientCertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestDefinition != nil {
		in, out := &in.RequestDefinition, &out.RequestDefinition
		*out = make([]TestRequestDefinitionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestMetadata != nil {
		in, out := &in.RequestMetadata, &out.RequestMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestProxy != nil {
		in, out := &in.RequestProxy, &out.RequestProxy
		*out = make([]TestRequestProxyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestQuery != nil {
		in, out := &in.RequestQuery, &out.RequestQuery
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SetCookie != nil {
		in, out := &in.SetCookie, &out.SetCookie
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Subtype != nil {
		in, out := &in.Subtype, &out.Subtype
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestObservation.
func (in *TestObservation) DeepCopy() *TestObservation {
	if in == nil {
		return nil
	}
	out := new(TestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestParameters) DeepCopyInto(out *TestParameters) {
	*out = *in
	if in.APIStep != nil {
		in, out := &in.APIStep, &out.APIStep
		*out = make([]APIStepParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Assertion != nil {
		in, out := &in.Assertion, &out.Assertion
		*out = make([]TestAssertionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BrowserStep != nil {
		in, out := &in.BrowserStep, &out.BrowserStep
		*out = make([]BrowserStepParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BrowserVariable != nil {
		in, out := &in.BrowserVariable, &out.BrowserVariable
		*out = make([]BrowserVariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigVariable != nil {
		in, out := &in.ConfigVariable, &out.ConfigVariable
		*out = make([]ConfigVariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeviceIds != nil {
		in, out := &in.DeviceIds, &out.DeviceIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Locations != nil {
		in, out := &in.Locations, &out.Locations
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OptionsList != nil {
		in, out := &in.OptionsList, &out.OptionsList
		*out = make([]OptionsListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestBasicauth != nil {
		in, out := &in.RequestBasicauth, &out.RequestBasicauth
		*out = make([]TestRequestBasicauthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestClientCertificate != nil {
		in, out := &in.RequestClientCertificate, &out.RequestClientCertificate
		*out = make([]TestRequestClientCertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestDefinition != nil {
		in, out := &in.RequestDefinition, &out.RequestDefinition
		*out = make([]TestRequestDefinitionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestMetadata != nil {
		in, out := &in.RequestMetadata, &out.RequestMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestProxy != nil {
		in, out := &in.RequestProxy, &out.RequestProxy
		*out = make([]TestRequestProxyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestQuery != nil {
		in, out := &in.RequestQuery, &out.RequestQuery
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SetCookie != nil {
		in, out := &in.SetCookie, &out.SetCookie
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Subtype != nil {
		in, out := &in.Subtype, &out.Subtype
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestParameters.
func (in *TestParameters) DeepCopy() *TestParameters {
	if in == nil {
		return nil
	}
	out := new(TestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestBasicauthInitParameters) DeepCopyInto(out *TestRequestBasicauthInitParameters) {
	*out = *in
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SessionToken != nil {
		in, out := &in.SessionToken, &out.SessionToken
		*out = new(string)
		**out = **in
	}
	if in.TokenAPIAuthentication != nil {
		in, out := &in.TokenAPIAuthentication, &out.TokenAPIAuthentication
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Workstation != nil {
		in, out := &in.Workstation, &out.Workstation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestBasicauthInitParameters.
func (in *TestRequestBasicauthInitParameters) DeepCopy() *TestRequestBasicauthInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestBasicauthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestBasicauthObservation) DeepCopyInto(out *TestRequestBasicauthObservation) {
	*out = *in
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SessionToken != nil {
		in, out := &in.SessionToken, &out.SessionToken
		*out = new(string)
		**out = **in
	}
	if in.TokenAPIAuthentication != nil {
		in, out := &in.TokenAPIAuthentication, &out.TokenAPIAuthentication
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Workstation != nil {
		in, out := &in.Workstation, &out.Workstation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestBasicauthObservation.
func (in *TestRequestBasicauthObservation) DeepCopy() *TestRequestBasicauthObservation {
	if in == nil {
		return nil
	}
	out := new(TestRequestBasicauthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestBasicauthParameters) DeepCopyInto(out *TestRequestBasicauthParameters) {
	*out = *in
	if in.AccessKeySecretRef != nil {
		in, out := &in.AccessKeySecretRef, &out.AccessKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.SecretKeySecretRef != nil {
		in, out := &in.SecretKeySecretRef, &out.SecretKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SessionToken != nil {
		in, out := &in.SessionToken, &out.SessionToken
		*out = new(string)
		**out = **in
	}
	if in.TokenAPIAuthentication != nil {
		in, out := &in.TokenAPIAuthentication, &out.TokenAPIAuthentication
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	if in.Workstation != nil {
		in, out := &in.Workstation, &out.Workstation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestBasicauthParameters.
func (in *TestRequestBasicauthParameters) DeepCopy() *TestRequestBasicauthParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestBasicauthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestClientCertificateInitParameters) DeepCopyInto(out *TestRequestClientCertificateInitParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = make([]RequestClientCertificateCertInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]RequestClientCertificateKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestClientCertificateInitParameters.
func (in *TestRequestClientCertificateInitParameters) DeepCopy() *TestRequestClientCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestClientCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestClientCertificateObservation) DeepCopyInto(out *TestRequestClientCertificateObservation) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = make([]RequestClientCertificateCertObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]RequestClientCertificateKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestClientCertificateObservation.
func (in *TestRequestClientCertificateObservation) DeepCopy() *TestRequestClientCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(TestRequestClientCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestClientCertificateParameters) DeepCopyInto(out *TestRequestClientCertificateParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = make([]RequestClientCertificateCertParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = make([]RequestClientCertificateKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestClientCertificateParameters.
func (in *TestRequestClientCertificateParameters) DeepCopy() *TestRequestClientCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestClientCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestDefinitionInitParameters) DeepCopyInto(out *TestRequestDefinitionInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.BodyType != nil {
		in, out := &in.BodyType, &out.BodyType
		*out = new(string)
		**out = **in
	}
	if in.CallType != nil {
		in, out := &in.CallType, &out.CallType
		*out = new(string)
		**out = **in
	}
	if in.CertificateDomains != nil {
		in, out := &in.CertificateDomains, &out.CertificateDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServer != nil {
		in, out := &in.DNSServer, &out.DNSServer
		*out = new(string)
		**out = **in
	}
	if in.DNSServerPort != nil {
		in, out := &in.DNSServerPort, &out.DNSServerPort
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.NoSavingResponseBody != nil {
		in, out := &in.NoSavingResponseBody, &out.NoSavingResponseBody
		*out = new(bool)
		**out = **in
	}
	if in.NumberOfPackets != nil {
		in, out := &in.NumberOfPackets, &out.NumberOfPackets
		*out = new(float64)
		**out = **in
	}
	if in.PersistCookies != nil {
		in, out := &in.PersistCookies, &out.PersistCookies
		*out = new(bool)
		**out = **in
	}
	if in.PlainProtoFile != nil {
		in, out := &in.PlainProtoFile, &out.PlainProtoFile
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ProtoJSONDescriptor != nil {
		in, out := &in.ProtoJSONDescriptor, &out.ProtoJSONDescriptor
		*out = new(string)
		**out = **in
	}
	if in.Servername != nil {
		in, out := &in.Servername, &out.Servername
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrackHops != nil {
		in, out := &in.ShouldTrackHops, &out.ShouldTrackHops
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestDefinitionInitParameters.
func (in *TestRequestDefinitionInitParameters) DeepCopy() *TestRequestDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestDefinitionObservation) DeepCopyInto(out *TestRequestDefinitionObservation) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.BodyType != nil {
		in, out := &in.BodyType, &out.BodyType
		*out = new(string)
		**out = **in
	}
	if in.CallType != nil {
		in, out := &in.CallType, &out.CallType
		*out = new(string)
		**out = **in
	}
	if in.CertificateDomains != nil {
		in, out := &in.CertificateDomains, &out.CertificateDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServer != nil {
		in, out := &in.DNSServer, &out.DNSServer
		*out = new(string)
		**out = **in
	}
	if in.DNSServerPort != nil {
		in, out := &in.DNSServerPort, &out.DNSServerPort
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.NoSavingResponseBody != nil {
		in, out := &in.NoSavingResponseBody, &out.NoSavingResponseBody
		*out = new(bool)
		**out = **in
	}
	if in.NumberOfPackets != nil {
		in, out := &in.NumberOfPackets, &out.NumberOfPackets
		*out = new(float64)
		**out = **in
	}
	if in.PersistCookies != nil {
		in, out := &in.PersistCookies, &out.PersistCookies
		*out = new(bool)
		**out = **in
	}
	if in.PlainProtoFile != nil {
		in, out := &in.PlainProtoFile, &out.PlainProtoFile
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ProtoJSONDescriptor != nil {
		in, out := &in.ProtoJSONDescriptor, &out.ProtoJSONDescriptor
		*out = new(string)
		**out = **in
	}
	if in.Servername != nil {
		in, out := &in.Servername, &out.Servername
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrackHops != nil {
		in, out := &in.ShouldTrackHops, &out.ShouldTrackHops
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestDefinitionObservation.
func (in *TestRequestDefinitionObservation) DeepCopy() *TestRequestDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(TestRequestDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestDefinitionParameters) DeepCopyInto(out *TestRequestDefinitionParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.BodyType != nil {
		in, out := &in.BodyType, &out.BodyType
		*out = new(string)
		**out = **in
	}
	if in.CallType != nil {
		in, out := &in.CallType, &out.CallType
		*out = new(string)
		**out = **in
	}
	if in.CertificateDomains != nil {
		in, out := &in.CertificateDomains, &out.CertificateDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServer != nil {
		in, out := &in.DNSServer, &out.DNSServer
		*out = new(string)
		**out = **in
	}
	if in.DNSServerPort != nil {
		in, out := &in.DNSServerPort, &out.DNSServerPort
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.NoSavingResponseBody != nil {
		in, out := &in.NoSavingResponseBody, &out.NoSavingResponseBody
		*out = new(bool)
		**out = **in
	}
	if in.NumberOfPackets != nil {
		in, out := &in.NumberOfPackets, &out.NumberOfPackets
		*out = new(float64)
		**out = **in
	}
	if in.PersistCookies != nil {
		in, out := &in.PersistCookies, &out.PersistCookies
		*out = new(bool)
		**out = **in
	}
	if in.PlainProtoFile != nil {
		in, out := &in.PlainProtoFile, &out.PlainProtoFile
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ProtoJSONDescriptor != nil {
		in, out := &in.ProtoJSONDescriptor, &out.ProtoJSONDescriptor
		*out = new(string)
		**out = **in
	}
	if in.Servername != nil {
		in, out := &in.Servername, &out.Servername
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrackHops != nil {
		in, out := &in.ShouldTrackHops, &out.ShouldTrackHops
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestDefinitionParameters.
func (in *TestRequestDefinitionParameters) DeepCopy() *TestRequestDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestProxyInitParameters) DeepCopyInto(out *TestRequestProxyInitParameters) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestProxyInitParameters.
func (in *TestRequestProxyInitParameters) DeepCopy() *TestRequestProxyInitParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestProxyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestProxyObservation) DeepCopyInto(out *TestRequestProxyObservation) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestProxyObservation.
func (in *TestRequestProxyObservation) DeepCopy() *TestRequestProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TestRequestProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestRequestProxyParameters) DeepCopyInto(out *TestRequestProxyParameters) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestRequestProxyParameters.
func (in *TestRequestProxyParameters) DeepCopy() *TestRequestProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TestRequestProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestSpec) DeepCopyInto(out *TestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestSpec.
func (in *TestSpec) DeepCopy() *TestSpec {
	if in == nil {
		return nil
	}
	out := new(TestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestStatus) DeepCopyInto(out *TestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestStatus.
func (in *TestStatus) DeepCopy() *TestStatus {
	if in == nil {
		return nil
	}
	out := new(TestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeframesInitParameters) DeepCopyInto(out *TimeframesInitParameters) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(float64)
		**out = **in
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeframesInitParameters.
func (in *TimeframesInitParameters) DeepCopy() *TimeframesInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimeframesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeframesObservation) DeepCopyInto(out *TimeframesObservation) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(float64)
		**out = **in
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeframesObservation.
func (in *TimeframesObservation) DeepCopy() *TimeframesObservation {
	if in == nil {
		return nil
	}
	out := new(TimeframesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeframesParameters) DeepCopyInto(out *TimeframesParameters) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(float64)
		**out = **in
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeframesParameters.
func (in *TimeframesParameters) DeepCopy() *TimeframesParameters {
	if in == nil {
		return nil
	}
	out := new(TimeframesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotpParametersInitParameters) DeepCopyInto(out *TotpParametersInitParameters) {
	*out = *in
	if in.Digits != nil {
		in, out := &in.Digits, &out.Digits
		*out = new(float64)
		**out = **in
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotpParametersInitParameters.
func (in *TotpParametersInitParameters) DeepCopy() *TotpParametersInitParameters {
	if in == nil {
		return nil
	}
	out := new(TotpParametersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotpParametersObservation) DeepCopyInto(out *TotpParametersObservation) {
	*out = *in
	if in.Digits != nil {
		in, out := &in.Digits, &out.Digits
		*out = new(float64)
		**out = **in
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotpParametersObservation.
func (in *TotpParametersObservation) DeepCopy() *TotpParametersObservation {
	if in == nil {
		return nil
	}
	out := new(TotpParametersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotpParametersParameters) DeepCopyInto(out *TotpParametersParameters) {
	*out = *in
	if in.Digits != nil {
		in, out := &in.Digits, &out.Digits
		*out = new(float64)
		**out = **in
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotpParametersParameters.
func (in *TotpParametersParameters) DeepCopy() *TotpParametersParameters {
	if in == nil {
		return nil
	}
	out := new(TotpParametersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueInitParameters) DeepCopyInto(out *ValueInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueInitParameters.
func (in *ValueInitParameters) DeepCopy() *ValueInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueObservation) DeepCopyInto(out *ValueObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueObservation.
func (in *ValueObservation) DeepCopy() *ValueObservation {
	if in == nil {
		return nil
	}
	out := new(ValueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValueParameters) DeepCopyInto(out *ValueParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValueParameters.
func (in *ValueParameters) DeepCopy() *ValueParameters {
	if in == nil {
		return nil
	}
	out := new(ValueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableInitParameters) DeepCopyInto(out *VariableInitParameters) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableInitParameters.
func (in *VariableInitParameters) DeepCopy() *VariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableObservation) DeepCopyInto(out *VariableObservation) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableObservation.
func (in *VariableObservation) DeepCopy() *VariableObservation {
	if in == nil {
		return nil
	}
	out := new(VariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableParameters) DeepCopyInto(out *VariableParameters) {
	*out = *in
	if in.Example != nil {
		in, out := &in.Example, &out.Example
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableParameters.
func (in *VariableParameters) DeepCopy() *VariableParameters {
	if in == nil {
		return nil
	}
	out := new(VariableParameters)
	in.DeepCopyInto(out)
	return out
}
